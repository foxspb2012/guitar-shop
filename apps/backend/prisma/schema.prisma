// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  Admin
  User
}

enum GuitarType {
  Electric
  Acoustic
  Ukulele
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique()
  name      String
  password  String
  role      UserRole @default(User)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("users")
}

model Product {
  id            Int         @id @default(autoincrement())
  title         String
  description   String
  photo         String
  guitarType    GuitarType  @default(Electric)
  article       String
  stringsCount  Int
  rating        Int         @default(0)
  price         Int         @default(0)
  commentsCount Int         @default(0)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
  orderItems    OrderItem[]
  comments      Comment[]

  @@map("products")
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  price     Int     @default(0)
  quantity  Int     @default(0)
  total     Int     @default(0)
  order     Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int

  @@map("order-items")
}

model Order {
  id        Int         @id @default(autoincrement())
  orderList OrderItem[]
  quantity  Int         @default(0)
  total     Int         @default(0)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now())

  @@map("orders")
}

model Comment {
  id            Int      @id @default(autoincrement())
  product       Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId     Int
  userId        Int
  score         Int
  content       String
  advantages    String
  disadvantages String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())

  @@map("comments")
}
